import e from"file-type";import r from"is-stream";import t from"tar-stream";import o from"buffer";var n={};var i=o.Buffer;const f=e;const m=r;const s=t;n=()=>e=>{if(!i.isBuffer(e)&&!m(e))return Promise.reject(new TypeError(`Expected a Buffer or Stream, got ${typeof e}`));if(i.isBuffer(e)&&(!f(e)||"tar"!==f(e).ext))return Promise.resolve([]);const r=s.extract();const t=[];r.on("entry",(e,r,o)=>{const n=[];r.on("data",e=>n.push(e));r.on("end",()=>{const r={data:i.concat(n),mode:e.mode,mtime:e.mtime,path:e.name,type:e.type};"symlink"!==e.type&&"link"!==e.type||(r.linkname=e.linkname);t.push(r);o()})});const o=new Promise((o,n)=>{i.isBuffer(e)||e.on("error",n);r.on("finish",()=>o(t));r.on("error",n)});r.then=o.then.bind(o);r.catch=o.catch.bind(o);i.isBuffer(e)?r.end(e):e.pipe(r);return r};var a=n;export default a;

