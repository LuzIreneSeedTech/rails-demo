import e from"url";import t from"punycode";import r from"query-string";import o from"prepend-http";import a from"sort-keys";var s={};const n=e;const p=t;const m=r;const i=o;const c=a;const h={"http:":80,"https:":443,"ftp:":21};const l={http:true,https:true,ftp:true,gopher:true,file:true,"http:":true,"https:":true,"ftp:":true,"gopher:":true,"file:":true};function testParameter(e,t){return t.some(t=>t instanceof RegExp?t.test(e):t===e)}s=(e,t)=>{t=Object.assign({normalizeProtocol:true,normalizeHttps:false,stripFragment:true,stripWWW:true,removeQueryParameters:[/^utm_\w+/i],removeTrailingSlash:true,removeDirectoryIndex:false,sortQueryParameters:true},t);if("string"!==typeof e)throw new TypeError("Expected a string");const r=e.startsWith("//");e=i(e.trim()).replace(/^\/\//,"http://");const o=n.parse(e);t.normalizeHttps&&"https:"===o.protocol&&(o.protocol="http:");if(!o.hostname&&!o.pathname)throw new Error("Invalid URL");delete o.host;delete o.query;t.stripFragment&&delete o.hash;const a=h[o.protocol];Number(o.port)===a&&delete o.port;o.pathname&&(o.pathname=o.pathname.replace(/\/{2,}/g,"/"));o.pathname&&(o.pathname=decodeURI(o.pathname));true===t.removeDirectoryIndex&&(t.removeDirectoryIndex=[/^index\.[a-z]+$/]);if(Array.isArray(t.removeDirectoryIndex)&&t.removeDirectoryIndex.length>0){let e=o.pathname.split("/");const r=e[e.length-1];if(testParameter(r,t.removeDirectoryIndex)){e=e.slice(0,e.length-1);o.pathname=e.slice(1).join("/")+"/"}}if(l[o.protocol]){const e=o.protocol+"//"+o.hostname;const t=n.resolve(e,o.pathname);o.pathname=t.replace(e,"")}if(o.hostname){o.hostname=p.toUnicode(o.hostname).toLowerCase();o.hostname=o.hostname.replace(/\.$/,"");t.stripWWW&&(o.hostname=o.hostname.replace(/^www\./,""))}"?"===o.search&&delete o.search;const s=m.parse(o.search);if(Array.isArray(t.removeQueryParameters))for(const e in s)testParameter(e,t.removeQueryParameters)&&delete s[e];t.sortQueryParameters&&(o.search=m.stringify(c(s)));null!==o.search&&(o.search=decodeURIComponent(o.search));e=n.format(o);(t.removeTrailingSlash||"/"===o.pathname)&&(e=e.replace(/\/$/,""));r&&!t.normalizeProtocol&&(e=e.replace(/^http:\/\//,"//"));return e};var u=s;export default u;

