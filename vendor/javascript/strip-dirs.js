import r from"path";import e from"util";import o from"is-natural-number";var t={};const i=r;const n=e;const s=o;t=function stripDirs(r,e,o){if("string"!==typeof r)throw new TypeError(n.inspect(r)+" is not a string. First argument to strip-dirs must be a path string.");if(i.posix.isAbsolute(r)||i.win32.isAbsolute(r))throw new Error(`${r} is an absolute path. strip-dirs requires a relative path.`);if(!s(e,{includeZero:true}))throw new Error("The Second argument of strip-dirs must be a natural number or 0, but received "+n.inspect(e)+".");if(o){if("object"!==typeof o)throw new TypeError(n.inspect(o)+" is not an object. Expected an object with a boolean `disallowOverflow` property.");if(Array.isArray(o))throw new TypeError(n.inspect(o)+" is an array. Expected an object with a boolean `disallowOverflow` property.");if("disallowOverflow"in o&&"boolean"!==typeof o.disallowOverflow)throw new TypeError(n.inspect(o.disallowOverflow)+" is neither true nor false. `disallowOverflow` option must be a Boolean value.")}else o={disallowOverflow:false};const t=i.normalize(r).split(i.sep);t.length>1&&"."===t[0]&&t.shift();if(e>t.length-1){if(o.disallowOverflow)throw new RangeError("Cannot strip more directories than there are.");e=t.length-1}return i.join.apply(null,t.slice(e))};var a=t;export default a;

