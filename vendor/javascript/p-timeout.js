import r from"p-finally";var o={};const e=r;class TimeoutError extends Error{constructor(r){super(r);this.name="TimeoutError"}}o=(r,o,t)=>new Promise((n,i)=>{if("number"!==typeof o||o<0)throw new TypeError("Expected `ms` to be a positive number");const s=setTimeout(()=>{if("function"===typeof t){try{n(t())}catch(s){i(s)}return}const e="string"===typeof t?t:`Promise timed out after ${o} milliseconds`;const s=t instanceof Error?t:new TimeoutError(e);"function"===typeof r.cancel&&r.cancel();i(s)},o);e(r.then(n,i),()=>{clearTimeout(s)})});o.TimeoutError=TimeoutError;var t=o;const n=o.TimeoutError;export default t;export{n as TimeoutError};

